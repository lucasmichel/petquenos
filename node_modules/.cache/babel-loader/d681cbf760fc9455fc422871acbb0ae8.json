{"remainingRequest":"/opt/lampp/htdocs/frontendpetpequeno/node_modules/babel-loader/lib/index.js!/opt/lampp/htdocs/frontendpetpequeno/node_modules/cache-loader/dist/cjs.js??ref--0-0!/opt/lampp/htdocs/frontendpetpequeno/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/lampp/htdocs/frontendpetpequeno/node_modules/vuejs-clipper/src/components/clipper-upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/opt/lampp/htdocs/frontendpetpequeno/node_modules/vuejs-clipper/src/components/clipper-upload.vue","mtime":499162500000},{"path":"/opt/lampp/htdocs/frontendpetpequeno/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/frontendpetpequeno/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/opt/lampp/htdocs/frontendpetpequeno/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/frontendpetpequeno/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zdGFydHMtd2l0aCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudXJsIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGV4aWYgZnJvbSAnZXhpZi1qcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgZXhpZjogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAogICAgdmFsdWU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJwogICAgfSwKICAgIGNoZWNrOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1cGxvYWRFbDogbnVsbCwKICAgICAgZmlsZTogbnVsbCwKICAgICAgRG9tU3RyaW5nOiAnJwogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLnVwbG9hZEVsID0gdGhpcy4kZWwucXVlcnlTZWxlY3RvcignLnVwbG9hZCcpOwogIH0sCiAgbWV0aG9kczogewogICAgdXBsb2FkOiBmdW5jdGlvbiB1cGxvYWQoZSkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgaWYgKGUudGFyZ2V0LmZpbGVzLmxlbmd0aCAhPT0gMSkgcmV0dXJuOwogICAgICB0aGlzLmZpbGUgPSBlLnRhcmdldC5maWxlc1swXTsKICAgICAgaWYgKHRoaXMuY2hlY2sgJiYgIXRoaXMuZmlsZS50eXBlLnN0YXJ0c1dpdGgoJ2ltYWdlLycpKSByZXR1cm47CgogICAgICBpZiAodGhpcy5Eb21TdHJpbmcgJiYgL15ibG9iOi8udGVzdCh0aGlzLkRvbVN0cmluZykpIHsKICAgICAgICB3aW5kb3cuVVJMLnJldm9rZU9iamVjdFVSTCh0aGlzLkRvbVN0cmluZyk7CiAgICAgIH0KCiAgICAgIHRoaXMuRG9tU3RyaW5nID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwodGhpcy5maWxlKTsKICAgICAgdGhpcy5jaGVja0VYSUYoKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy4kZW1pdCgnaW5wdXQnLCBfdGhpcy5Eb21TdHJpbmcpOwogICAgICB9KTsKICAgIH0sCiAgICBjaGVja0VYSUY6IGZ1bmN0aW9uIGNoZWNrRVhJRigpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIGlmICghX3RoaXMyLmV4aWYpIHJldHVybiByZWplY3QobmV3IEVycm9yKCkpOwogICAgICAgIHJlc29sdmUoKTsKICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIF90aGlzMi5nZXRFWElGKCk7CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKG9yaWVudGF0aW9uKSB7CiAgICAgICAgcmV0dXJuIF90aGlzMi5nZXRJbWFnZVJlY3QoKS50aGVuKGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgICAgICB2YXIgd2lkdGggPSBfcmVmLndpZHRoLAogICAgICAgICAgICAgIGhlaWdodCA9IF9yZWYuaGVpZ2h0OwogICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh7CiAgICAgICAgICAgIHdpZHRoOiB3aWR0aCwKICAgICAgICAgICAgaGVpZ2h0OiBoZWlnaHQsCiAgICAgICAgICAgIG9yaWVudGF0aW9uOiBvcmllbnRhdGlvbgogICAgICAgICAgfSk7CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKCkgewogICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBFcnJvcigpKTsKICAgICAgICB9KTsKICAgICAgfSkudGhlbih0aGlzLnRyYW5mb3JtQ2FudmFzKS5jYXRjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpOwogICAgICB9KTsgLy8ganVzdCB1c2UgY2F0Y2ggdG8gZXNjYXBlIGNoYWlucwogICAgfSwKICAgIGdldEVYSUY6IGZ1bmN0aW9uIGdldEVYSUYoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICBleGlmLmdldERhdGEoX3RoaXMzLmZpbGUsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHZhciBvcmllbnRhdGlvbiA9IHRoaXMuZXhpZmRhdGEuT3JpZW50YXRpb247CiAgICAgICAgICBpZiAob3JpZW50YXRpb24gPT09IHVuZGVmaW5lZCB8fCBvcmllbnRhdGlvbiA9PT0gMSkgcmVqZWN0KG5ldyBFcnJvcigpKTsKICAgICAgICAgIHJlc29sdmUob3JpZW50YXRpb24pOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBnZXRJbWFnZVJlY3Q6IGZ1bmN0aW9uIGdldEltYWdlUmVjdCgpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIHZhciBpbWcgPSBfdGhpczQuJGVsLnF1ZXJ5U2VsZWN0b3IoJy5zdGVtJyk7CgogICAgICAgIGlmIChpbWcuY29tcGxldGUpIHsKICAgICAgICAgIHJldHVybiByZXNvbHZlKHsKICAgICAgICAgICAgd2lkdGg6IGltZy5uYXR1cmFsV2lkdGgsCiAgICAgICAgICAgIGhlaWdodDogaW1nLm5hdHVyYWxIZWlnaHQKICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgICAgaW1nLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJlc29sdmUoewogICAgICAgICAgICB3aWR0aDogdGhpcy5uYXR1cmFsV2lkdGgsCiAgICAgICAgICAgIGhlaWdodDogdGhpcy5uYXR1cmFsSGVpZ2h0CiAgICAgICAgICB9KTsKICAgICAgICB9OwoKICAgICAgICBpbWcub25lcnJvciA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoJ2ltZyBvbiBsb2FkIGVycm9yJykpOwogICAgICAgIH07CiAgICAgIH0pOwogICAgfSwKICAgIHRyYW5mb3JtQ2FudmFzOiBmdW5jdGlvbiB0cmFuZm9ybUNhbnZhcyhfcmVmMikgewogICAgICB2YXIgd2lkdGggPSBfcmVmMi53aWR0aCwKICAgICAgICAgIGhlaWdodCA9IF9yZWYyLmhlaWdodCwKICAgICAgICAgIG9yaWVudGF0aW9uID0gX3JlZjIub3JpZW50YXRpb247CgogICAgICAvKiogVGhpcyBwaWVjZSBvZiBjb2RlIGlzIHJlZmVyZW5jZWQgdG8NCiAgICAgICAqIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzIwNjAwODAwL2pzLWNsaWVudC1zaWRlLWV4aWYtb3JpZW50YXRpb24tcm90YXRlLWFuZC1taXJyb3ItanBlZy1pbWFnZXMgKi8KICAgICAgdmFyIGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpOwogICAgICB2YXIgY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7IC8vIHNldCBwcm9wZXIgY2FudmFzIGRpbWVuc2lvbnMgYmVmb3JlIHRyYW5zZm9ybSAmIGV4cG9ydAoKICAgICAgaWYgKG9yaWVudGF0aW9uID4gNCAmJiBvcmllbnRhdGlvbiA8IDkpIHsKICAgICAgICBjYW52YXMud2lkdGggPSBoZWlnaHQ7CiAgICAgICAgY2FudmFzLmhlaWdodCA9IHdpZHRoOwogICAgICB9IGVsc2UgewogICAgICAgIGNhbnZhcy53aWR0aCA9IHdpZHRoOwogICAgICAgIGNhbnZhcy5oZWlnaHQgPSBoZWlnaHQ7CiAgICAgIH0gLy8gdHJhbnNmb3JtIGNvbnRleHQgYmVmb3JlIGRyYXdpbmcgaW1hZ2UKCgogICAgICBzd2l0Y2ggKG9yaWVudGF0aW9uKSB7CiAgICAgICAgY2FzZSAyOgogICAgICAgICAgY3R4LnRyYW5zZm9ybSgtMSwgMCwgMCwgMSwgd2lkdGgsIDApOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgMzoKICAgICAgICAgIGN0eC50cmFuc2Zvcm0oLTEsIDAsIDAsIC0xLCB3aWR0aCwgaGVpZ2h0KTsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlIDQ6CiAgICAgICAgICBjdHgudHJhbnNmb3JtKDEsIDAsIDAsIC0xLCAwLCBoZWlnaHQpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgNToKICAgICAgICAgIGN0eC50cmFuc2Zvcm0oMCwgMSwgMSwgMCwgMCwgMCk7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSA2OgogICAgICAgICAgY3R4LnRyYW5zZm9ybSgwLCAxLCAtMSwgMCwgaGVpZ2h0LCAwKTsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlIDc6CiAgICAgICAgICBjdHgudHJhbnNmb3JtKDAsIC0xLCAtMSwgMCwgaGVpZ2h0LCB3aWR0aCk7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSA4OgogICAgICAgICAgY3R4LnRyYW5zZm9ybSgwLCAtMSwgMSwgMCwgMCwgd2lkdGgpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgY3R4LmRyYXdJbWFnZSh0aGlzLiRlbC5xdWVyeVNlbGVjdG9yKCcuc3RlbScpLCAwLCAwKTsKICAgICAgdGhpcy5Eb21TdHJpbmcgPSBjYW52YXMudG9EYXRhVVJMKHRoaXMuZmlsZS50eXBlKTsKICAgIH0sCiAgICBjbGVhcjogZnVuY3Rpb24gY2xlYXIoZSkgewogICAgICBlLnRhcmdldC52YWx1ZSA9IG51bGw7CiAgICB9LAogICAgdHJpZ2dlcklucHV0OiBmdW5jdGlvbiB0cmlnZ2VySW5wdXQoKSB7CiAgICAgIGlmICh0aGlzLnVwbG9hZEVsKSB0aGlzLnVwbG9hZEVsLmNsaWNrKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["clipper-upload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div @click=\"triggerInput\">\r\n    <slot />\r\n    <img\r\n      class=\"stem\"\r\n      :src=\"DomString\"\r\n      style=\"display:none\"\r\n    >\r\n    <input\r\n      type=\"file\"\r\n      class=\"upload\"\r\n      style=\"display:none\"\r\n      v-bind=\"$attrs\"\r\n      @change=\"upload($event)\"\r\n      @click=\"clear($event)\"\r\n    >\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport exif from 'exif-js'\r\n\r\nexport default {\r\n  props: {\r\n    exif: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    value: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    check: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  data: () => {\r\n    return {\r\n      uploadEl: null,\r\n      file: null,\r\n      DomString: ''\r\n    }\r\n  },\r\n  mounted () {\r\n    this.uploadEl = this.$el.querySelector('.upload')\r\n  },\r\n  methods: {\r\n    upload: function (e) {\r\n      if (e.target.files.length !== 1) return\r\n      this.file = e.target.files[0]\r\n      if (this.check && !this.file.type.startsWith('image/')) return\r\n      if (this.DomString && /^blob:/.test(this.DomString)) { window.URL.revokeObjectURL(this.DomString) }\r\n      this.DomString = window.URL.createObjectURL(this.file)\r\n      this.checkEXIF().then(() => {\r\n        this.$emit('input', this.DomString)\r\n      })\r\n    },\r\n    checkEXIF: function () {\r\n      return new Promise((resolve, reject) => {\r\n        if (!this.exif) return reject(new Error())\r\n        resolve()\r\n      })\r\n        .then(() => this.getEXIF())\r\n        .then(orientation => this.getImageRect()\r\n          .then(({ width, height }) => {\r\n            return Promise.resolve({\r\n              width,\r\n              height,\r\n              orientation\r\n            })\r\n          })\r\n          .catch(() => Promise.reject(new Error())))\r\n        .then(this.tranformCanvas)\r\n        .catch(() => Promise.resolve()) // just use catch to escape chains\r\n    },\r\n    getEXIF: function () {\r\n      return new Promise((resolve, reject) => {\r\n        exif.getData(this.file, function () {\r\n          const orientation = this.exifdata.Orientation\r\n          if (orientation === undefined || orientation === 1) reject(new Error())\r\n          resolve(orientation)\r\n        })\r\n      })\r\n    },\r\n    getImageRect: function () {\r\n      return new Promise((resolve, reject) => {\r\n        const img = this.$el.querySelector('.stem')\r\n        if (img.complete) {\r\n          return resolve({\r\n            width: img.naturalWidth,\r\n            height: img.naturalHeight\r\n          })\r\n        }\r\n        img.onload = function () {\r\n          resolve({\r\n            width: this.naturalWidth,\r\n            height: this.naturalHeight\r\n          })\r\n        }\r\n        img.onerror = function () {\r\n          reject(new Error('img on load error'))\r\n        }\r\n      })\r\n    },\r\n    tranformCanvas: function ({ width, height, orientation }) {\r\n      /** This piece of code is referenced to\r\n       * https://stackoverflow.com/questions/20600800/js-client-side-exif-orientation-rotate-and-mirror-jpeg-images */\r\n      const canvas = document.createElement('canvas')\r\n      const ctx = canvas.getContext('2d')\r\n\r\n      // set proper canvas dimensions before transform & export\r\n      if (orientation > 4 && orientation < 9) {\r\n        canvas.width = height\r\n        canvas.height = width\r\n      } else {\r\n        canvas.width = width\r\n        canvas.height = height\r\n      }\r\n      // transform context before drawing image\r\n      switch (orientation) {\r\n        case 2: ctx.transform(-1, 0, 0, 1, width, 0); break\r\n        case 3: ctx.transform(-1, 0, 0, -1, width, height); break\r\n        case 4: ctx.transform(1, 0, 0, -1, 0, height); break\r\n        case 5: ctx.transform(0, 1, 1, 0, 0, 0); break\r\n        case 6: ctx.transform(0, 1, -1, 0, height, 0); break\r\n        case 7: ctx.transform(0, -1, -1, 0, height, width); break\r\n        case 8: ctx.transform(0, -1, 1, 0, 0, width); break\r\n        default: break\r\n      }\r\n\r\n      ctx.drawImage(this.$el.querySelector('.stem'), 0, 0)\r\n      this.DomString = canvas.toDataURL(this.file.type)\r\n    },\r\n    clear: function (e) {\r\n      e.target.value = null\r\n    },\r\n    triggerInput: function () {\r\n      if (this.uploadEl) this.uploadEl.click()\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"node_modules/vuejs-clipper/src/components"}]}