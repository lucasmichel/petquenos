{"remainingRequest":"/opt/lampp/htdocs/frontendpetpequeno/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/lampp/htdocs/frontendpetpequeno/node_modules/vuejs-clipper/src/components/clipper-range.vue?vue&type=style&index=0&id=7f413ba8&lang=scss&scoped=true&","dependencies":[{"path":"/opt/lampp/htdocs/frontendpetpequeno/node_modules/vuejs-clipper/src/components/clipper-range.vue","mtime":499162500000},{"path":"/opt/lampp/htdocs/frontendpetpequeno/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/frontendpetpequeno/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/frontendpetpequeno/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/frontendpetpequeno/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/frontendpetpequeno/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/frontendpetpequeno/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmNsaXBwZXItcmFuZ2Ugew0KICBib3gtc2l6aW5nOiBib3JkZXItYm94Ow0KICBwYWRkaW5nOiAxMHB4Ow0KfQ0KLndyYXAgew0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQogIGhlaWdodDogMjVweDsNCiAgd2lkdGg6IDEwMCU7DQp9DQouc3RpY2sgew0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIHdpZHRoOiAxMDAlOw0KICBoZWlnaHQ6IDJweDsNCiAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTsNCiAgdG9wOiA1MCU7DQogIGxlZnQ6IDA7DQogIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTsNCn0NCi5iYXIgew0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIGN1cnNvcjogcG9pbnRlcjsNCiAgd2lkdGg6IDEycHg7DQogIGhlaWdodDogMTAwJTsNCiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQogIGJveC1zaGFkb3c6IDFweCAxcHggNHB4IHJnYmEoMCwgMCwgMCwgMC41KTsNCiAgdG9wOiAwOw0KICBsZWZ0OiAwOw0KfQ0K"},{"version":3,"sources":["clipper-range.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"clipper-range.vue","sourceRoot":"node_modules/vuejs-clipper/src/components","sourcesContent":["<template>\r\n  <div class=\"clipper-range\">\r\n    <div\r\n      v-stream:mousedown=\"mousedown$\"\r\n      v-stream:touchstart=\"touchstart$\"\r\n      class=\"wrap\"\r\n    >\r\n      <div class=\"stick\" />\r\n      <div\r\n        class=\"bar\"\r\n        :style=\"barStyle\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { map, concatMap, takeUntil, startWith, merge } from 'rxjs/operators'\r\nimport { Subject, fromEvent } from 'rxjs'\r\nexport default {\r\n  domStreams: ['mousedown$', 'touchstart$'],\r\n  subscriptions () {\r\n    this.init$ = new Subject()\r\n    this.mouseup$ = fromEvent(window, 'mouseup')\r\n    this.mousemove$ = fromEvent(window, 'mousemove')\r\n    this.touchmove$ = fromEvent(window, 'touchmove', { passive: false })\r\n    this.touchend$ = fromEvent(window, 'touchend', { passive: false })\r\n    this.mouseEvent$ = this.mousedown$.pipe(\r\n      map(e => {\r\n        e.event.preventDefault()\r\n        return e.event\r\n      }),\r\n      concatMap(() =>\r\n        this.mousemove$.pipe(takeUntil(this.mouseup$), map(e => e.clientX))\r\n      ),\r\n      merge(this.mousedown$.pipe(map(e => e.event.clientX)))\r\n    )\r\n    this.touchEvent$ = this.touchstart$.pipe(\r\n      map(e => {\r\n        e.event.preventDefault()\r\n        return e.event\r\n      }),\r\n      concatMap(() =>\r\n        this.touchmove$.pipe(\r\n          takeUntil(this.touchend$),\r\n          map(e => e.touches[0].clientX)\r\n        )\r\n      ),\r\n      merge(this.touchstart$.pipe(map(e => e.event.touches[0].clientX)))\r\n    )\r\n    this.dragSubject$ = new Subject().pipe(\r\n      merge(this.mouseEvent$),\r\n      merge(this.touchEvent$),\r\n      map(this.getLeftPercent),\r\n      startWith(0),\r\n      merge(this.init$)\r\n    )\r\n    return {\r\n      x$: this.dragSubject$\r\n    }\r\n  },\r\n  props: {\r\n    value: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    max: {\r\n      type: Number,\r\n      default: 10\r\n    },\r\n    min: {\r\n      type: Number,\r\n      default: 0\r\n    }\r\n  },\r\n  computed: {\r\n    barStyle: function () {\r\n      return {\r\n        left: `${this.x$ * 100}%`\r\n      }\r\n    },\r\n    val: function () {\r\n      const range = this.max - this.min\r\n      const pos = this.getPos()\r\n      const stickPos = pos.stickPos\r\n      const maxLeft = pos.maxLeft\r\n      return this.x$ * stickPos.width / maxLeft * range + this.min\r\n    }\r\n  },\r\n  watch: {\r\n    value: function () {\r\n      this.initVal()\r\n    }\r\n  },\r\n  mounted () {\r\n    this.initVal()\r\n    this.$subscribeTo(this.dragSubject$, () => {\r\n      this.$emit('input', this.val)\r\n    })\r\n  },\r\n  methods: {\r\n    getPos: function () {\r\n      const stickPos = this.$el.querySelector('.stick').getBoundingClientRect()\r\n      const barPos = this.$el.querySelector('.bar').getBoundingClientRect()\r\n      return {\r\n        maxLeft: stickPos.width - barPos.width,\r\n        stickPos,\r\n        barPos\r\n      }\r\n    },\r\n    getLeftPercent: function (x) {\r\n      const stickPos = this.$el.querySelector('.stick').getBoundingClientRect()\r\n      const barPos = this.$el.querySelector('.bar').getBoundingClientRect()\r\n      const maxLeft = stickPos.width - barPos.width\r\n      const left = Math.max(Math.min(x - stickPos.left, maxLeft), 0)\r\n      return left / stickPos.width\r\n    },\r\n    initVal: function () {\r\n      const range = this.max - this.min\r\n      const percent = (this.value - this.min) / range\r\n      const pos = this.getPos()\r\n      this.init$.next(percent * pos.maxLeft / pos.stickPos.width)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='scss' scoped>\r\n.clipper-range {\r\n  box-sizing: border-box;\r\n  padding: 10px;\r\n}\r\n.wrap {\r\n  position: relative;\r\n  height: 25px;\r\n  width: 100%;\r\n}\r\n.stick {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 2px;\r\n  background-color: gray;\r\n  top: 50%;\r\n  left: 0;\r\n  transform: translateY(-50%);\r\n}\r\n.bar {\r\n  position: absolute;\r\n  cursor: pointer;\r\n  width: 12px;\r\n  height: 100%;\r\n  background-color: white;\r\n  box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.5);\r\n  top: 0;\r\n  left: 0;\r\n}\r\n</style>\r\n"]}]}