{"remainingRequest":"/opt/lampp/htdocs/frontendpetpequeno/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/lampp/htdocs/frontendpetpequeno/node_modules/vuejs-clipper/src/components/clipper-upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/opt/lampp/htdocs/frontendpetpequeno/node_modules/vuejs-clipper/src/components/clipper-upload.vue","mtime":499162500000},{"path":"/opt/lampp/htdocs/frontendpetpequeno/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/frontendpetpequeno/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/frontendpetpequeno/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/opt/lampp/htdocs/frontendpetpequeno/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/frontendpetpequeno/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgZXhpZiBmcm9tICdleGlmLWpzJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIHByb3BzOiB7DQogICAgZXhpZjogew0KICAgICAgdHlwZTogQm9vbGVhbiwNCiAgICAgIGRlZmF1bHQ6IHRydWUNCiAgICB9LA0KICAgIHZhbHVlOiB7DQogICAgICB0eXBlOiBTdHJpbmcsDQogICAgICBkZWZhdWx0OiAnJw0KICAgIH0sDQogICAgY2hlY2s6IHsNCiAgICAgIHR5cGU6IEJvb2xlYW4sDQogICAgICBkZWZhdWx0OiB0cnVlDQogICAgfQ0KICB9LA0KICBkYXRhOiAoKSA9PiB7DQogICAgcmV0dXJuIHsNCiAgICAgIHVwbG9hZEVsOiBudWxsLA0KICAgICAgZmlsZTogbnVsbCwNCiAgICAgIERvbVN0cmluZzogJycNCiAgICB9DQogIH0sDQogIG1vdW50ZWQgKCkgew0KICAgIHRoaXMudXBsb2FkRWwgPSB0aGlzLiRlbC5xdWVyeVNlbGVjdG9yKCcudXBsb2FkJykNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIHVwbG9hZDogZnVuY3Rpb24gKGUpIHsNCiAgICAgIGlmIChlLnRhcmdldC5maWxlcy5sZW5ndGggIT09IDEpIHJldHVybg0KICAgICAgdGhpcy5maWxlID0gZS50YXJnZXQuZmlsZXNbMF0NCiAgICAgIGlmICh0aGlzLmNoZWNrICYmICF0aGlzLmZpbGUudHlwZS5zdGFydHNXaXRoKCdpbWFnZS8nKSkgcmV0dXJuDQogICAgICBpZiAodGhpcy5Eb21TdHJpbmcgJiYgL15ibG9iOi8udGVzdCh0aGlzLkRvbVN0cmluZykpIHsgd2luZG93LlVSTC5yZXZva2VPYmplY3RVUkwodGhpcy5Eb21TdHJpbmcpIH0NCiAgICAgIHRoaXMuRG9tU3RyaW5nID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwodGhpcy5maWxlKQ0KICAgICAgdGhpcy5jaGVja0VYSUYoKS50aGVuKCgpID0+IHsNCiAgICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB0aGlzLkRvbVN0cmluZykNCiAgICAgIH0pDQogICAgfSwNCiAgICBjaGVja0VYSUY6IGZ1bmN0aW9uICgpIHsNCiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7DQogICAgICAgIGlmICghdGhpcy5leGlmKSByZXR1cm4gcmVqZWN0KG5ldyBFcnJvcigpKQ0KICAgICAgICByZXNvbHZlKCkNCiAgICAgIH0pDQogICAgICAgIC50aGVuKCgpID0+IHRoaXMuZ2V0RVhJRigpKQ0KICAgICAgICAudGhlbihvcmllbnRhdGlvbiA9PiB0aGlzLmdldEltYWdlUmVjdCgpDQogICAgICAgICAgLnRoZW4oKHsgd2lkdGgsIGhlaWdodCB9KSA9PiB7DQogICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHsNCiAgICAgICAgICAgICAgd2lkdGgsDQogICAgICAgICAgICAgIGhlaWdodCwNCiAgICAgICAgICAgICAgb3JpZW50YXRpb24NCiAgICAgICAgICAgIH0pDQogICAgICAgICAgfSkNCiAgICAgICAgICAuY2F0Y2goKCkgPT4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKCkpKSkNCiAgICAgICAgLnRoZW4odGhpcy50cmFuZm9ybUNhbnZhcykNCiAgICAgICAgLmNhdGNoKCgpID0+IFByb21pc2UucmVzb2x2ZSgpKSAvLyBqdXN0IHVzZSBjYXRjaCB0byBlc2NhcGUgY2hhaW5zDQogICAgfSwNCiAgICBnZXRFWElGOiBmdW5jdGlvbiAoKSB7DQogICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gew0KICAgICAgICBleGlmLmdldERhdGEodGhpcy5maWxlLCBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgY29uc3Qgb3JpZW50YXRpb24gPSB0aGlzLmV4aWZkYXRhLk9yaWVudGF0aW9uDQogICAgICAgICAgaWYgKG9yaWVudGF0aW9uID09PSB1bmRlZmluZWQgfHwgb3JpZW50YXRpb24gPT09IDEpIHJlamVjdChuZXcgRXJyb3IoKSkNCiAgICAgICAgICByZXNvbHZlKG9yaWVudGF0aW9uKQ0KICAgICAgICB9KQ0KICAgICAgfSkNCiAgICB9LA0KICAgIGdldEltYWdlUmVjdDogZnVuY3Rpb24gKCkgew0KICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsNCiAgICAgICAgY29uc3QgaW1nID0gdGhpcy4kZWwucXVlcnlTZWxlY3RvcignLnN0ZW0nKQ0KICAgICAgICBpZiAoaW1nLmNvbXBsZXRlKSB7DQogICAgICAgICAgcmV0dXJuIHJlc29sdmUoew0KICAgICAgICAgICAgd2lkdGg6IGltZy5uYXR1cmFsV2lkdGgsDQogICAgICAgICAgICBoZWlnaHQ6IGltZy5uYXR1cmFsSGVpZ2h0DQogICAgICAgICAgfSkNCiAgICAgICAgfQ0KICAgICAgICBpbWcub25sb2FkID0gZnVuY3Rpb24gKCkgew0KICAgICAgICAgIHJlc29sdmUoew0KICAgICAgICAgICAgd2lkdGg6IHRoaXMubmF0dXJhbFdpZHRoLA0KICAgICAgICAgICAgaGVpZ2h0OiB0aGlzLm5hdHVyYWxIZWlnaHQNCiAgICAgICAgICB9KQ0KICAgICAgICB9DQogICAgICAgIGltZy5vbmVycm9yID0gZnVuY3Rpb24gKCkgew0KICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoJ2ltZyBvbiBsb2FkIGVycm9yJykpDQogICAgICAgIH0NCiAgICAgIH0pDQogICAgfSwNCiAgICB0cmFuZm9ybUNhbnZhczogZnVuY3Rpb24gKHsgd2lkdGgsIGhlaWdodCwgb3JpZW50YXRpb24gfSkgew0KICAgICAgLyoqIFRoaXMgcGllY2Ugb2YgY29kZSBpcyByZWZlcmVuY2VkIHRvDQogICAgICAgKiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8yMDYwMDgwMC9qcy1jbGllbnQtc2lkZS1leGlmLW9yaWVudGF0aW9uLXJvdGF0ZS1hbmQtbWlycm9yLWpwZWctaW1hZ2VzICovDQogICAgICBjb25zdCBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKQ0KICAgICAgY29uc3QgY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJykNCg0KICAgICAgLy8gc2V0IHByb3BlciBjYW52YXMgZGltZW5zaW9ucyBiZWZvcmUgdHJhbnNmb3JtICYgZXhwb3J0DQogICAgICBpZiAob3JpZW50YXRpb24gPiA0ICYmIG9yaWVudGF0aW9uIDwgOSkgew0KICAgICAgICBjYW52YXMud2lkdGggPSBoZWlnaHQNCiAgICAgICAgY2FudmFzLmhlaWdodCA9IHdpZHRoDQogICAgICB9IGVsc2Ugew0KICAgICAgICBjYW52YXMud2lkdGggPSB3aWR0aA0KICAgICAgICBjYW52YXMuaGVpZ2h0ID0gaGVpZ2h0DQogICAgICB9DQogICAgICAvLyB0cmFuc2Zvcm0gY29udGV4dCBiZWZvcmUgZHJhd2luZyBpbWFnZQ0KICAgICAgc3dpdGNoIChvcmllbnRhdGlvbikgew0KICAgICAgICBjYXNlIDI6IGN0eC50cmFuc2Zvcm0oLTEsIDAsIDAsIDEsIHdpZHRoLCAwKTsgYnJlYWsNCiAgICAgICAgY2FzZSAzOiBjdHgudHJhbnNmb3JtKC0xLCAwLCAwLCAtMSwgd2lkdGgsIGhlaWdodCk7IGJyZWFrDQogICAgICAgIGNhc2UgNDogY3R4LnRyYW5zZm9ybSgxLCAwLCAwLCAtMSwgMCwgaGVpZ2h0KTsgYnJlYWsNCiAgICAgICAgY2FzZSA1OiBjdHgudHJhbnNmb3JtKDAsIDEsIDEsIDAsIDAsIDApOyBicmVhaw0KICAgICAgICBjYXNlIDY6IGN0eC50cmFuc2Zvcm0oMCwgMSwgLTEsIDAsIGhlaWdodCwgMCk7IGJyZWFrDQogICAgICAgIGNhc2UgNzogY3R4LnRyYW5zZm9ybSgwLCAtMSwgLTEsIDAsIGhlaWdodCwgd2lkdGgpOyBicmVhaw0KICAgICAgICBjYXNlIDg6IGN0eC50cmFuc2Zvcm0oMCwgLTEsIDEsIDAsIDAsIHdpZHRoKTsgYnJlYWsNCiAgICAgICAgZGVmYXVsdDogYnJlYWsNCiAgICAgIH0NCg0KICAgICAgY3R4LmRyYXdJbWFnZSh0aGlzLiRlbC5xdWVyeVNlbGVjdG9yKCcuc3RlbScpLCAwLCAwKQ0KICAgICAgdGhpcy5Eb21TdHJpbmcgPSBjYW52YXMudG9EYXRhVVJMKHRoaXMuZmlsZS50eXBlKQ0KICAgIH0sDQogICAgY2xlYXI6IGZ1bmN0aW9uIChlKSB7DQogICAgICBlLnRhcmdldC52YWx1ZSA9IG51bGwNCiAgICB9LA0KICAgIHRyaWdnZXJJbnB1dDogZnVuY3Rpb24gKCkgew0KICAgICAgaWYgKHRoaXMudXBsb2FkRWwpIHRoaXMudXBsb2FkRWwuY2xpY2soKQ0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["clipper-upload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAofile":"clipper-upload.vue","sourceRoot":"node_modules/vuejs-clipper/src/components","sourcesContent":["<template>\r\n  <div @click=\"triggerInput\">\r\n    <slot />\r\n    <img\r\n      class=\"stem\"\r\n      :src=\"DomString\"\r\n      style=\"display:none\"\r\n    >\r\n    <input\r\n      type=\"file\"\r\n      class=\"upload\"\r\n      style=\"display:none\"\r\n      v-bind=\"$attrs\"\r\n      @change=\"upload($event)\"\r\n      @click=\"clear($event)\"\r\n    >\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport exif from 'exif-js'\r\n\r\nexport default {\r\n  props: {\r\n    exif: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    value: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    check: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  data: () => {\r\n    return {\r\n      uploadEl: null,\r\n      file: null,\r\n      DomString: ''\r\n    }\r\n  },\r\n  mounted () {\r\n    this.uploadEl = this.$el.querySelector('.upload')\r\n  },\r\n  methods: {\r\n    upload: function (e) {\r\n      if (e.target.files.length !== 1) return\r\n      this.file = e.target.files[0]\r\n      if (this.check && !this.file.type.startsWith('image/')) return\r\n      if (this.DomString && /^blob:/.test(this.DomString)) { window.URL.revokeObjectURL(this.DomString) }\r\n      this.DomString = window.URL.createObjectURL(this.file)\r\n      this.checkEXIF().then(() => {\r\n        this.$emit('input', this.DomString)\r\n      })\r\n    },\r\n    checkEXIF: function () {\r\n      return new Promise((resolve, reject) => {\r\n        if (!this.exif) return reject(new Error())\r\n        resolve()\r\n      })\r\n        .then(() => this.getEXIF())\r\n        .then(orientation => this.getImageRect()\r\n          .then(({ width, height }) => {\r\n            return Promise.resolve({\r\n              width,\r\n              height,\r\n              orientation\r\n            })\r\n          })\r\n          .catch(() => Promise.reject(new Error())))\r\n        .then(this.tranformCanvas)\r\n        .catch(() => Promise.resolve()) // just use catch to escape chains\r\n    },\r\n    getEXIF: function () {\r\n      return new Promise((resolve, reject) => {\r\n        exif.getData(this.file, function () {\r\n          const orientation = this.exifdata.Orientation\r\n          if (orientation === undefined || orientation === 1) reject(new Error())\r\n          resolve(orientation)\r\n        })\r\n      })\r\n    },\r\n    getImageRect: function () {\r\n      return new Promise((resolve, reject) => {\r\n        const img = this.$el.querySelector('.stem')\r\n        if (img.complete) {\r\n          return resolve({\r\n            width: img.naturalWidth,\r\n            height: img.naturalHeight\r\n          })\r\n        }\r\n        img.onload = function () {\r\n          resolve({\r\n            width: this.naturalWidth,\r\n            height: this.naturalHeight\r\n          })\r\n        }\r\n        img.onerror = function () {\r\n          reject(new Error('img on load error'))\r\n        }\r\n      })\r\n    },\r\n    tranformCanvas: function ({ width, height, orientation }) {\r\n      /** This piece of code is referenced to\r\n       * https://stackoverflow.com/questions/20600800/js-client-side-exif-orientation-rotate-and-mirror-jpeg-images */\r\n      const canvas = document.createElement('canvas')\r\n      const ctx = canvas.getContext('2d')\r\n\r\n      // set proper canvas dimensions before transform & export\r\n      if (orientation > 4 && orientation < 9) {\r\n        canvas.width = height\r\n        canvas.height = width\r\n      } else {\r\n        canvas.width = width\r\n        canvas.height = height\r\n      }\r\n      // transform context before drawing image\r\n      switch (orientation) {\r\n        case 2: ctx.transform(-1, 0, 0, 1, width, 0); break\r\n        case 3: ctx.transform(-1, 0, 0, -1, width, height); break\r\n        case 4: ctx.transform(1, 0, 0, -1, 0, height); break\r\n        case 5: ctx.transform(0, 1, 1, 0, 0, 0); break\r\n        case 6: ctx.transform(0, 1, -1, 0, height, 0); break\r\n        case 7: ctx.transform(0, -1, -1, 0, height, width); break\r\n        case 8: ctx.transform(0, -1, 1, 0, 0, width); break\r\n        default: break\r\n      }\r\n\r\n      ctx.drawImage(this.$el.querySelector('.stem'), 0, 0)\r\n      this.DomString = canvas.toDataURL(this.file.type)\r\n    },\r\n    clear: function (e) {\r\n      e.target.value = null\r\n    },\r\n    triggerInput: function () {\r\n      if (this.uploadEl) this.uploadEl.click()\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}